# Mutable vs. Immutable
    수정 가능한 객체 & 수정 불가능한 객체
    자바스크립트에서 Object와 Array를 제외한 모든 타입은 Immutable

    ## 객체가 Immutable한 이유?
        - 성능 향상 : 객체가 미래에 변할 계획이 없을 때
        - 메모리 사용 줄이기 : 전체 객체를 복사하지 않고 객체 참조를 만듦
        - Thread-safety : 여러 개의 스레드가 서로 간섭하지 않고 같은 객체를 참조할 수 있음
        - 이해하기 쉽고 더 높은 보안이 가능
        - 개발자의 정신적 짐을 덜어주기 위함 : 객체의 상태는 변하지 않을 것이고 그것의 행동도 언제나 동일할 것
        
    ## Object와 Array는 기본적으로 Mutable

    ## 차이점
        Mutable
            - 생성된 이후 수정 가능
            - 이미 존재하는 객체에 재할당 (값 변경)
            - 값을 변경할 수 있는 메소드 제공 => 객체의 프로퍼티를 바꿀 수 있는 한 이것은 mutable하다
            - mutable class의 경우 Getter와 Setter 존재
            - 병렬 처리 시 값을 보장 못함 (thread safe X)
            - StringBuffer, StringBuilder, java.util.Date 등이 해당

        Immutable   
            - 생성된 이후 수정 불가
            - 새로운 객체 생성해 재할당 (이미 존재하는 객체더라도)
            - 값을 변경할 수 있는 메소드 X
            - Immutable class는 Getter와 Setter 없음
            - 병렬 처리 시 문제 없음
            - Legacy classes, Wrapper classes, String class 등이 해당

    
    
    ## 참고 사이트
    - https://velog.io/@guswlsapdlf/Java%EC%9D%98-Mutable%EA%B3%BC-Immutable
    - https://2ssue.github.io/common_questions_for_Web_Developer/docs/Programming/12_immutable&mutable.html#immutable
    - https://developer.mozilla.org/en-US/docs/Glossary/Immutable
    - https://en.wikipedia.org/wiki/Immutable_object
